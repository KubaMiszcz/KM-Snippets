{
    "Print message to console": {
        "prefix": "km-log",
        "body": [
            "console.log('${1|xxx,yyy,zzz|}');",
            "$0"
        ],
        "description": "Log output to console"
    },
    "Print message with this.variable to console": {
        "prefix": "km-log-this-variable",
        "body": [
            "console.log('${1| ,xxx,yyy,zzz|}' ${3| + this.,+ |}${2:variable});",
            "$0"
        ],
        "description": "Log output to console"
    },
    "Print message with JSON this.variable to console": {
        "prefix": "km-log-json-this-variable",
        "body": [
            "console.log('${1| ,xxx,yyy,zzz|}' ${3| + JSON.stringify(this.,+ JSON.stringify(|}${2:variable});",
            "$0"
        ],
        "description": "Log output to console"
    },
    "If statement": {
        "prefix": "km-if",
        "body": [
            "if (${1:var1} === ${2:var2}) {",
            "\t${3://statementIfTrue};",
            "}",
            "$0"
        ],
        "description": "If statement"
    },
    "@Input() decorator": {
        "prefix": "km-input",
        "body": [
            "@Input() ${1:name}: ${2:type};",
            "$0"
        ],
        "description": "Angular @Input decorator"
    },
    "@Output() decorator": {
        "prefix": "km-output",
        "body": [
            "@Output() ${1:name}: ${2:type};",
            "$0"
        ],
        "description": "Angular @Output decorator"
    },
    "Event emitter property": {
        "prefix": "km-event-emitter",
        "body": [
            "@Output() ${1:notify}: EventEmitter<${2:type}> = new EventEmitter<${2:type}>();",
            "\n",
            "passValueFromEvent(${3:value}: ${2:type}) {",
            "\tthis.${1:notify}.emit(${3:value});",
            "$0"
        ],
        "description": "Event emitter property"
    },
    "emit Value from event Event emitter property": {
        "prefix": "km-emit-event-value",
        "body": [
            "passValueFromEvent(${1:value}: ${2:type}) {",
            "\tthis.${3:notify}.emit(${1:value});",
            "$0"
        ],
        "description": "emit Value from event Event emitter property"
    }
}